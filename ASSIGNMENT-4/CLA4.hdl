/* The CHIP [4-bit CLA] computes the following :- C(i)=C(i-1)P(i-1)+G(i-1) , S(i)=XOR(P(i),C(i)) , PI=P(0)P(1)P(2)P(3) , GI=P(0)P(1)P(2)G0+P(0)P(1)G1+P(0)G2+G3. */

CHIP CLA4 {
     IN x[4],y[4],c0;
     OUT s[4],PI,GI,c3,c4;
  
     PARTS:

     //Computes P(i). 
     XOR(a=x[0] , b=y[0] , out=P0);
     XOR(a=x[1] , b=y[1] , out=P1);
     XOR(a=x[2] , b=y[2] , out=P2);
     XOR(a=x[3] , b=y[3] , out=P3);

     //Computes G(i).
     And(a=x[0] , b=y[0] , out=G0);
     And(a=x[1] , b=y[1] , out=G1);
     And(a=x[2] , b=y[2] , out=G2);
     And(a=x[3] , b=y[3] , out=G3);

     //Computes c(1).
     And(a=P0 , b=c0 , out=ip0);
     Or(a=ip0 , b=G0 , out=c1);

     //Computes c(2).
     And(a=P1 , b=c1 , out=ip1);
     Or(a=ip1 , b=G1 , out=c2);

     //Computes c(3).
     And(a=P2 , b=c2 , out=ip2);
     Or(a=ip2 , b=G2 , out=temp);
     Or(a=temp , b=temp , out=c3);

     //Computes c(4).
     And(a=P3 , b=temp , out=ip3);
     Or(a=ip3 , b=G3 , out=c4);

     //Computes s(i).
     XOR(a=P0 , b=c0 , out=s[0]);
     XOR(a=P1 , b=c1 , out=s[1]);
     XOR(a=P2 , b=c2 , out=s[2]);
     XOR(a=P3 , b=temp , out=s[3]);

     //Commputes PI.
     AND4(a1=P0 , a2=P1 , a3=P2 , a4=P3 , out=PI);

     //Commputes GI.
     AND4(a1=G0 , a2=P1 , a3=P2 , a4=P3 , out=t1);
     And(a=G1 , b=P2 , out=t2);
     And(a=t2 , b=P3 , out=t3);
     And(a=G2 , b=P3 , out=t4);
     Or(a=t1 , b=t3 , out=p1);
     Or(a=p1 , b=t4 , out=p2);
     Or(a=p2 , b=G3 , out=GI);  
}
     